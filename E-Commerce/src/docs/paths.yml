paths:
# --------------------------------- productos -------------------------------- #
  /api/products:
    get:
      tags:
      - Products
      summary: Obtener todos los productos
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Products/getAllProducts"
    post:
      tags:
      - Products
      summary: Crear un nuevo producto
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/parameters/schemas/Product"
      responses:
        200:
          description: Creado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Products/product"
      security:
        - BearerAuth: []
  /api/products/{pid}:
    get:
      tags:
      - Products
      summary: Obtener un producto por ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/parameters/schemas/getProduct"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Products/product"
    put:
      tags:
      - Products
      summary: Actualizar un producto por ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/parameters/schemas/Product"
      responses:
        #los mismos codigos usados en el product controller
        200:
          description: Se registro el producto correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Products/product' #la ruta del archivo response
        500:
          description: Error de servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Products/notFound'
        404:
          description: Error de validacion del schema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Products/validationError'
      security:
        - BearerAuth: []
    delete:
      tags:
      - Products
      summary: Eliminar un producto por ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/parameters/schemas/Product/getProduct"
      responses:
        200:
          description: Se elimin√≥ el producto correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Products/product'
        404:
          description: Producto no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Products/notFound'
      security:
        - BearerAuth: []
# ---------------------------------- carros ---------------------------------- #
  /api/carts:
    post:
      tags:
      - Carts
      summary: Crear un nuevo carrito
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/parameters/schemas/Cart"
      responses:
        200:
          description: Creado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Carts/cart"
        404:
          description: Error de validacion del schema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carts/creationError'
      security:
        - BearerAuth: []
  /api/carts/{cid}:
    get:
      tags:
      - Carts
      summary: Obtener un carrito por ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/parameters/schemas/getCart"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Carts/cart"
        404:
          description: Carrito no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carts/notFound'
    put:
      tags:
      - Carts
      summary: Reemplazar un carrito por ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/parameters/schemas/getCart"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Carts/cart"
      security:
        - BearerAuth: []
    delete:
      tags:
      - Carts
      summary: Vaciar un carrito por ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/parameters/schemas/getCart"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Carts/cart"
        404:
          description: Carrito no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carts/notFound'
      security:
        - BearerAuth: []
  /api/carts/{cid}/products/{pid}:
    post:
      tags:
      - Carts
      summary: Actualizar carrito con un nuevo producto
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/parameters/schemas/cartAndProductId"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Carts/cart"
        404:
          description: Carrito o producto no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carts/notFound'
      security:
        - BearerAuth: []
    put:
      tags:
      - Carts
      summary: Actualizar la cantidad de un producto en el carrito
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/parameters/schemas/updateQty"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Carts/cart"
        404:
          description: Carrito o producto no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carts/notFound'
      security:
        - BearerAuth: []
    delete:
      tags:
      - Carts
      summary: Eliminar un producto del carrito
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/parameters/schemas/cartAndProductId"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Carts/cart"
        404:
          description: Producto no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Products/notFound'
      security:
        - BearerAuth: []
  /api/carts/{cid}/purchase:
    put:
      tags:
      - Carts
      summary: Generar un ticket de compra para el carrito
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/parameters/schemas/userId"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tickets/ticket"
        404:
          description: Carrito o producto no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tickets/creationError'
      security:
        - BearerAuth: []